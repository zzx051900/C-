//(未完善）
#include<iostream>
using namespace std;

/*
立方体类设计：
1.创建立方体类
2.设计属性
3.设计行为：获取立方体面积和体积
4.分别用全局函数和成员函数判断两个立方体是否相等
*/

class Cube
{
public:
	//设置长
	void setL(int l)
	{
		m_L = l;
	}
	//获取长
	int getL()
	{
		return m_L;
	}
	//设置宽
	void setW(int w)
	{
		m_W = w;
	}
	//获取宽
	int getW()
	{
		return m_W;
	}
	//设置高
	void setH(int h)
	{
		m_H = h;
	}
	//获取高
	int getH()
	{
		return m_H;
	}
	//获取立方体面积
	int calculateS()
	{
		return 2 * (m_L*m_W + m_L*m_H + m_W*m_H);
	}
	//获取立方体体积
	int calculateV()
	{
		return m_L * m_W * m_H;
	}
	//利用成员函数判断两个立方体是否相等（此时参数只传一个，因为又另一个立方体调用的这个成员函数，不需要传参）
	bool isSameByClass(Cube &c)
	{
		//判断条件
		//m_L   
		//c2.getL()
		return 1;
	}

private:
	int m_L;//长
	int m_W;//宽
	int m_H;//高
};

bool isSame(Cube &c1, Cube &c2);

int main()
{
	//创建一个立方体对象
	Cube c1;
	c1.setL(10);//长设为10
	c1.setW(10);
	c1.setH(10);

	cout << "c1的面积为：" << c1.calculateS() << endl;
	cout << "c1的体积为：" << c1.calculateV() << endl;

	//创建第二个立方体
	Cube c2;
	c2.setL(10);//长设为10
	c2.setW(10);
	c2.setH(10);

	//利用全局函数判断
	bool ret = isSame(c1, c2);
	if (ret)
	{
		cout << "全局函数判断相等" << endl;
	}
	else
	{
		cout << "全局函数判断不相等" << endl;
	}

	//利用成员函数判断
	ret = c1.isSameByClass(c2);
	if (ret)
	{
		cout << "成员函数判断相等" << endl;
	}
	else
	{
		cout << "成员函数判断不相等" << endl;
	}

	system("pause");
	return 0;
}

//利用全局函数判断两个立方体是否相等
bool isSame(Cube &c1, Cube &c2)
{
	//判断条件
	return 1;
}