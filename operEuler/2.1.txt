#include <linux/sched.h>

struct cfs_rq {
        struct load_weight load;
        unsigned int nr_running;
        unsigned int h_nr_running;
};

BEGIN
{
        printf("获取运行队列长度，按 Ctrl-C 结束 \n");
}

profile:hz:99
{
        // 学生TODO: 请添加代码
}




#include <linux/sched.h>

struct cfs_rq {
        struct load_weight load;
        unsigned int nr_running;
        unsigned int h_nr_running;
};

BEGIN
{
        printf("获取运行队列长度，按 Ctrl-C 结束 \n");
}

profile:hz:99
{
        // 学生TODO: 请添加代码
	struct cfs_rq rq;

    // 从内核中读取cfs_rq结构
    bpf_probe_read(&rq, sizeof(rq), (void *)PT_REGS_PARM1(ctx));

    // 打印runqueue长度
    printf("Runqueue长度：%u\n", rq.nr_running);
}




#include <linux/sched.h>

struct cfs_rq {
    struct load_weight load;
    unsigned int nr_running;
    unsigned int h_nr_running;
};

BEGIN
{
    printf("获取运行队列长度，按 Ctrl-C 结束 \n");
}

profile:hz:99
{
    // 输出运行队列的长度
    printf("运行队列长度: %u\n", ((struct cfs_rq *)arg0)->nr_running);
}
